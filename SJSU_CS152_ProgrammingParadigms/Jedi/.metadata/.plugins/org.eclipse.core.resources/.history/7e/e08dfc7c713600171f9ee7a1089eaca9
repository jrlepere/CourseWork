package expressions

import values._
import system.TypeException

class Iteration(condition: Expression, body: Expression) extends SpecialForm {
  def execute(env: Environment): Value = {
    val condExe = condition.execute(env)
    if (!condExe.isInstanceOf[Boole]) throw new TypeException("Condition must be a Boole")
    while (condExe.asInstanceOf[Boole].value) body.execute(env)
  }
}