package testing;

import java.util.Arrays;

import org.junit.Test;

import algorithm.AStar;
import algorithm.ISearchAlgorithm;
import algorithm.ResultObject;
import eight_puzzle.Problem;

public class DepthAnalysis {

	@Test
	public void writeCsvDepthAnalysis() {
		
		long[] h1GenNodes = new long[10];
		long[] h2GenNodes = new long[10];
		int[] countPerDepth = new int[10];
		int maxPerDepth = 10;
		
		ISearchAlgorithm aStar = new AStar();
		int h1Num = 1;
		int h2Num = 2;
		while (true) {
			System.out.println(Arrays.toString(countPerDepth));
			boolean exit = true;
			for (int i = 0; i < countPerDepth.length; i ++) {
				if (countPerDepth[i] < maxPerDepth) {
					exit = false;
				}
			}
			if (exit) break;
			ResultObject res = aStar.execute(new Problem(null,h2Num));
			int totalDepth = res.getTotalDepth();
			if ((totalDepth <= 20) && (totalDepth > 1) && (totalDepth % 2 == 0)) {
				int index = totalDepth/2 - 1;
				if (countPerDepth[index] > maxPerDepth) continue;
				h2GenNodes[index] += res.getNumberNodesGenerated();
				h1GenNodes[index] += aStar.execute(new Problem(res.getInitialState().getTileLocations(),h1Num)).getNumberNodesGenerated();
			}
		}
		System.out.println(h1GenNodes);
		System.out.println(h2GenNodes);
		
	}

}
