import java.util.List;

/**
 * An object to be returned from executing an algorithm.
 * @author JLepere2
 * @date 01/28/2018
 */
public class ResultObject {

	/**
	 * Creates a ResultObject
	 * @param initialNode the initial node
	 * @param goalNode the goal node
	 * @param actionSequence a list of actions to get from the goal node to the initial node
	 * @param numNodesGenerated the number of nodes generated
	 */
	public ResultObject(Node initialNode, Node goalNode, List<IAction> actionSequence, int numNodesGenerated) {
		this.init = initialNode;
		this.goal = goalNode;
		this.actions = actionSequence;
	}
	
	/**
	 * Gets the initial state
	 * @return the initial state
	 */
	public State getInitialState() {
		return init.getState();
	}
	
	/**
	 * Gets the goal state
	 * @return the goal state
	 */
	public State getGoalState() {
		return goal.getState();
	}
	
	/**
	 * Gets the list of actions to get from the initial state to the goal state.
	 * @return
	 */
	public List<IAction> getActionSequence() {
		return actions;
	}
	
	/**
	 * Gets the total cost of the path from initial state to goal state
	 * @return the total cost of the path 
	 */
	public int getTotalCost() {
		return goal.getCost();
	}
	
	/**
	 * Gets the total depth of the path from initial state to goal state
	 * @return the total depth of the path
	 */
	public int getTotalDepth() {
		return goal.getDepth();
	}
	
	private Node init;
	private Node goal;
	private List<IAction> actions;
	private int nodesGenerated;
	
}
