import static org.junit.Assert.assertEquals;

import java.util.Map;
import java.util.TreeMap;

import org.junit.Test;

public class DepthTesting {

	public DepthTesting() {
		tests = new TreeMap<>();
		tests.put(4, new int[]{3,1,0,4,5,2,6,7,8});
		tests.put(4, new int[]{3,2,0,4,1,5,6,7,8});
		tests.put(8, new int[]{4,3,1,5,0,2,6,7,8});
		tests.put(8, new int[]{3,2,5,4,0,8,6,1,7});
		tests.put(12, new int[]{5,4,1,6,3,2,0,7,8});
		tests.put(12, new int[]{3,5,8,4,0,2,6,1,7});
		tests.put(16, new int[]{5,4,1,6,0,3,7,8,2});
		tests.put(16, new int[]{3,5,8,6,0,2,1,4,7});
		tests.put(20, new int[]{5,4,1,7,6,3,8,2,0});
		tests.put(20, new int[]{5,8,0,3,6,2,1,4,7});
	}
	
	@Test
	public void heuristicOneTest() {
		Problem p;
		for ()
	}
	
	@Test
	public void depth4() {
		int expectedDepth = 4;
		int heuristicNum = 1;
		Problem p;
		int[] s1 = new int[]{3,1,0,4,5,2,6,7,8};
		int[] s2 = new int[]{3,2,0,4,1,5,6,7,8};
		p = new Problem(s1,heuristicNum);
		assertEquals(expectedDepth, aStar.execute(p).getTotalDepth());
		p = new Problem(s2,heuristicNum);
		assertEquals(expectedDepth, aStar.execute(p).getTotalDepth());
	}
	
	class DepthExpectation {
		public DepthExpectation(int depth, int[] sequence) {
			this.depth = depth;
			this.sequence = sequence;
		}
		
		private int depth;
		private int[] sequence;
	}
	
	private ISearchAlgorithm aStar = new AStar();
	private List<int[]> tests;

}
